# reports/serializers.py

from rest_framework import serializers
from .models import (
    Report,
    EmailSendRecord,
    Template,
    ScheduledTask,
    TaskLog,
    IntermediateData
)
from dvadmin.utils.serializers import CustomModelSerializer


# ===========================
# 简报管理模块序列化器
# ===========================

class ReportSerializer(CustomModelSerializer):
    """
    简报序列化器（用于查询和展示）
    """
    creator = serializers.ReadOnlyField(source='creator.username')

    class Meta:
        model = Report
        fields = "__all__"


class ReportCreateUpdateSerializer(CustomModelSerializer):
    """
    简报创建/更新序列化器（用于创建和更新）
    """
    class Meta:
        model = Report
        fields = "__all__"


class EmailSendRecordSerializer(CustomModelSerializer):
    """
    邮件发送记录序列化器（用于查询和展示）
    """
    report_title = serializers.ReadOnlyField(source='report.title')

    class Meta:
        model = EmailSendRecord
        fields = "__all__"


class EmailSendRecordCreateUpdateSerializer(CustomModelSerializer):
    """
    邮件发送记录创建/更新序列化器（用于创建和更新）
    """
    class Meta:
        model = EmailSendRecord
        fields = "__all__"


# ===========================
# 模板管理模块序列化器
# ===========================

class TemplateSerializer(CustomModelSerializer):
    """
    模板序列化器（用于查询和展示）
    """
    creator = serializers.ReadOnlyField(source='creator.username')

    class Meta:
        model = Template
        fields = "__all__"


class TemplateCreateUpdateSerializer(CustomModelSerializer):
    """
    模板创建/更新序列化器（用于创建和更新）
    """
    class Meta:
        model = Template
        fields = "__all__"


# ===========================
# 任务管理模块序列化器
# ===========================

class ScheduledTaskSerializer(CustomModelSerializer):
    """
    定时任务序列化器（用于查询和展示）
    """
    template_name = serializers.ReadOnlyField(source='template.template_name')
    creator = serializers.ReadOnlyField(source='creator.username')

    class Meta:
        model = ScheduledTask
        fields = "__all__"


class ScheduledTaskCreateUpdateSerializer(CustomModelSerializer):
    """
    定时任务创建/更新序列化器（用于创建和更新）
    """
    class Meta:
        model = ScheduledTask
        fields = "__all__"


class TaskLogSerializer(CustomModelSerializer):
    """
    任务日志序列化器（用于查询和展示）
    """
    class Meta:
        model = TaskLog
        fields = "__all__"


class TaskLogCreateUpdateSerializer(CustomModelSerializer):
    """
    任务日志创建/更新序列化器（用于创建和更新）
    注意：通常任务日志由系统生成，不需要手动创建或更新。
    """
    class Meta:
        model = TaskLog
        fields = "__all__"


class IntermediateDataSerializer(CustomModelSerializer):
    """
    中间数据序列化器（用于查询和展示）
    """
    job_name = serializers.ReadOnlyField(source='job.name')

    class Meta:
        model = IntermediateData
        fields = "__all__"


class IntermediateDataCreateUpdateSerializer(CustomModelSerializer):
    """
    中间数据创建/更新序列化器（用于创建和更新）
    """
    class Meta:
        model = IntermediateData
        fields = "__all__"
